version: "3.8"
name: homelab
volumes:
  grafana-data:
    driver: local
  portainer-data:
    driver: local
  prometheus-data:
    driver: local
  postgres:
    driver: local
  pgadmin:
    driver: local
  nocodb:
    driver: local
services:
  grafana:
    image: grafana/grafana-oss:latest
    mem_limit: 512m
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
  portainer-agent:
    container_name: portainer-agent
    deploy:
      mode: global
    image: portainer/agent:latest
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: unless-stopped
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9000:9000
      - 9443:9443
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    mem_limit: 512m
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command: "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    ports:
      - 9187:9187
    environment:
    - DATA_SOURCE_NAME='postgresql://postgres:postgres@pg-sandbox:5432/?sslmode=disable'
  postgres:
    container_name: postgres
    mem_limit: 512M
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres-user
      - POSTGRES_PASSWORD=IlikePizza69420
    ports:
      - '5432:5432'
    volumes: 
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres-user", "-d", "IlikePizza69420"]
      interval: 10s
      timeout: 10s
      retries: 5
  pgadmin:
    container_name: pgadmin4
    depends_on:
      postgres: 
        condition: service_healthy
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=josh@p4a.net
      - PGADMIN_DEFAULT_PASSWORD=beepboop69420
      - PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    healthcheck:
      test: ["CMD", "wget", "-0", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 10s
      retries: 5
  nocodb: 
    depends_on: 
      postgres: 
        condition: service_healthy
    environment: 
      NC_DB: "pg://postgres:5432?u=postgres-user&p=IlikePizza69420&db=postgres"
    image: "nocodb/nocodb:latest"
    ports: 
      - "8888:8888"
    restart: always
    volumes: 
      - "nocodb:/usr/app/data"